apiVersion: batch/v1
kind: Job
metadata:
  name: kolabajabe-port-forward
spec:
  template:
    spec:
      serviceAccountName: default  # Ensure the default service account is used
      containers:
        - name: port-forward
          image: bitnami/kubectl:latest
          command:
            - "/bin/sh"
            - "-c"
            - |
              # Create the Role if it doesn't exist
              kubectl get role port-forward-pods-role -n kolabajabe || kubectl apply -f - <<EOF
              apiVersion: rbac.authorization.k8s.io/v1
              kind: Role
              metadata:
                namespace: kolabajabe
                name: port-forward-pods-role
              rules:
              - apiGroups: [""]
                resources: ["services", "pods"]
                verbs: ["get", "list", "portforward"]
              - apiGroups: ["rbac.authorization.k8s.io"]
                resources: ["roles", "rolebindings"]
                verbs: ["get", "list", "create", "update"]
              EOF

              # Create the RoleBinding if it doesn't exist
              kubectl get rolebinding port-forward-pods-rolebinding -n kolabajabe || kubectl apply -f - <<EOF
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                name: port-forward-pods-rolebinding
                namespace: kolabajabe
              subjects:
              - kind: ServiceAccount
                name: default
                namespace: kolabajabe
              roleRef:
                kind: Role
                name: port-forward-pods-role
                apiGroup: rbac.authorization.k8s.io
              EOF

              # Perform the port forward
              kubectl port-forward svc/myapp-service 8000:8080 -n kolabajabe
      restartPolicy: Never
  backoffLimit: 4
